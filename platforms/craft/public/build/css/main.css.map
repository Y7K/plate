{"version":3,"sources":["_config.scss","general/_mixins.scss","general/_typo.scss","general/_layout.scss","general/_general.scss"],"names":[],"mappings":"AAAA;;;;gCAIgC;AAiChC;;;;gCAIgC;AA4ChC;;;;+BAI+B;AAG/B;;;;gCAIgC;AAQhC;;;;gCAIgC;AC5GhC;;GAEG;AA2CH;EARQ,aAAa;EACb,eAAe,EAClB;;AAML;EAJQ,YAAY,EACf;;AC5BL;EACI,YF+FS;EE9FT,sBAAsB,EACzB;;AAED;EACI,UAAU;EACV,WAAW,EACd;;AAED;EApBI,0CF8FkC;EE7FlC,gBFgGiB;EE/FjB,kBAAkB,EAqBrB;;AAED;EAzBI,0CF8FkC;EE7FlC,gBFgGiB;EE/FjB,kBAAkB,EA0BrB;;AAED;EA9BI,0CF8FkC;EE7FlC,gBFgGiB;EE/FjB,kBAAkB,EA+BrB;;AAED;EAnCI,0CF8FkC;EE7FlC,gBFgGiB;EE/FjB,kBAAkB,EAmCrB;;AAED;EAvCI,0CF8FkC;EE7FlC,gBFgGiB;EE/FjB,kBAAkB,EAuCrB;;AAED;EA3CI,0CF8FkC;EE7FlC,gBFgGiB;EE/FjB,kBAAkB,EA2CrB;;ACjDD;EAAW,YAAY,EAAI;;AAC3B;EAAY,aAAa,EAAI;;AAE7B;EAAQ,iBAAiB,EAAI;;AAC7B;EAAQ,mBAAmB,EAAI;;AAC/B;EAAQ,kBAAkB,EAAI;;AAE9B;EAAwB,sBAAsB,EAAI;;AAElD;EACI,cAAc,EACjB;;AHkCG;EGhCJ;IAEQ,cAAc,EAErB,EAAA;;AHmCG;EGjCJ;IAEQ,cAAc,EAErB,EAAA;;AHkDG;EGhDJ;IAEQ,cAAc,EAErB,EAAA;;AA8BG;EAEI,aHtCI,EGwDP;EHlCD;IGcA;MAG0B,aH7BZ,EG8Cb,EAAA;EApBD;IAMQ,aH3CM,EG8CT;IHvBL;MGcA;QAO8B,aHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,aHxCV,EGyChB,EAAA;EATL;IAWQ,aH9CM,EGiDT;IH5BL;MGcA;QAY8B,aHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,aH3CV,EG4ChB,EAAA;EAdL;IAgBQ,cHlDM,EGqDT;IHjCL;MGcA;QAiB8B,aHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,aH/CX,EGgDf,EAAA;;AAnBL;EAEI,iBHtCI,EGwDP;EHlCD;IGcA;MAG0B,iBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,iBH3CM,EG8CT;IHvBL;MGcA;QAO8B,iBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,iBHxCV,EGyChB,EAAA;EATL;IAWQ,iBH9CM,EGiDT;IH5BL;MGcA;QAY8B,iBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,iBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,kBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,iBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,iBH/CX,EGgDf,EAAA;;AAnBL;EAEI,mBHtCI,EGwDP;EHlCD;IGcA;MAG0B,mBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,mBH3CM,EG8CT;IHvBL;MGcA;QAO8B,mBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,mBHxCV,EGyChB,EAAA;EATL;IAWQ,mBH9CM,EGiDT;IH5BL;MGcA;QAY8B,mBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,mBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,oBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,mBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,mBH/CX,EGgDf,EAAA;;AAnBL;EAEI,oBHtCI,EGwDP;EHlCD;IGcA;MAG0B,oBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,oBH3CM,EG8CT;IHvBL;MGcA;QAO8B,oBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,oBHxCV,EGyChB,EAAA;EATL;IAWQ,oBH9CM,EGiDT;IH5BL;MGcA;QAY8B,oBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,oBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,qBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,oBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,oBH/CX,EGgDf,EAAA;;AAnBL;EAEI,kBHtCI,EGwDP;EHlCD;IGcA;MAG0B,kBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,kBH3CM,EG8CT;IHvBL;MGcA;QAO8B,kBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,kBHxCV,EGyChB,EAAA;EATL;IAWQ,kBH9CM,EGiDT;IH5BL;MGcA;QAY8B,kBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,kBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,mBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,kBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,kBH/CX,EGgDf,EAAA;;AAnBL;EAEI,cHtCI,EGwDP;EHlCD;IGcA;MAG0B,cH7BZ,EG8Cb,EAAA;EApBD;IAMQ,cH3CM,EG8CT;IHvBL;MGcA;QAO8B,cHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,cHxCV,EGyChB,EAAA;EATL;IAWQ,cH9CM,EGiDT;IH5BL;MGcA;QAY8B,cHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,cH3CV,EG4ChB,EAAA;EAdL;IAgBQ,eHlDM,EGqDT;IHjCL;MGcA;QAiB8B,cHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,cH/CX,EGgDf,EAAA;;AAnBL;EAEI,kBHtCI,EGwDP;EHlCD;IGcA;MAG0B,kBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,kBH3CM,EG8CT;IHvBL;MGcA;QAO8B,kBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,kBHxCV,EGyChB,EAAA;EATL;IAWQ,kBH9CM,EGiDT;IH5BL;MGcA;QAY8B,kBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,kBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,mBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,kBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,kBH/CX,EGgDf,EAAA;;AAnBL;EAEI,oBHtCI,EGwDP;EHlCD;IGcA;MAG0B,oBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,oBH3CM,EG8CT;IHvBL;MGcA;QAO8B,oBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,oBHxCV,EGyChB,EAAA;EATL;IAWQ,oBH9CM,EGiDT;IH5BL;MGcA;QAY8B,oBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,oBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,qBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,oBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,oBH/CX,EGgDf,EAAA;;AAnBL;EAEI,qBHtCI,EGwDP;EHlCD;IGcA;MAG0B,qBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,qBH3CM,EG8CT;IHvBL;MGcA;QAO8B,qBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,qBHxCV,EGyChB,EAAA;EATL;IAWQ,qBH9CM,EGiDT;IH5BL;MGcA;QAY8B,qBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,qBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,sBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,qBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,qBH/CX,EGgDf,EAAA;;AAnBL;EAEI,mBHtCI,EGwDP;EHlCD;IGcA;MAG0B,mBH7BZ,EG8Cb,EAAA;EApBD;IAMQ,mBH3CM,EG8CT;IHvBL;MGcA;QAO8B,mBHlCV,EGoCf,EAAA;IHTL;MGAA;QAQ+B,mBHxCV,EGyChB,EAAA;EATL;IAWQ,mBH9CM,EGiDT;IH5BL;MGcA;QAY8B,mBHrCV,EGuCf,EAAA;IHdL;MGAA;QAa+B,mBH3CV,EG4ChB,EAAA;EAdL;IAgBQ,oBHlDM,EGqDT;IHjCL;MGcA;QAiB8B,mBHzCX,EG2Cd,EAAA;IHnBL;MGAA;QAkB+B,mBH/CX,EGgDf,EAAA;;AC9ET;EACI,uBAAuB;EACvB,UAAU;EACV,WAAW,EACd;;AAMD;EACI,0CJwFiC;EIvFjC,oCAAoC;EACpC,mBAAmB,EACtB","file":"main.css","sourcesContent":["/******************************\n *\n *  Margins and Paddings\n *\n ******************************/\n\n// Predefined Spaces (for margins, gutter, etc.)\n//\n// For the same spaces everywhere, just use \"$space-small\" etc. as Variable.\n// If you need responsive spacing (e.g. 40px on desktop and 20px on mobile) use the\n// adaptive spacing mixins (see _layout.scss)\n//\n// Example:\n//\n// .box {\n//     @extend .space-top--small();\n//     @extend .space-bottom--huge();\n// }\n//\n// This will use $space-small, $space-small-phone etc. according to the breakpoints. Adjust the basic spaces below.\n//\n//\n$space-small: 10px;\n$space: 20px;\n$space-large: 40px;\n$space-huge: 100px;\n\n$space-small-tablet: 10px;\n$space-tablet: 20px;\n$space-large-tablet: 30px;\n$space-huge-tablet: 80px;\n\n$space-small-phone: 10px;\n$space-phone: 20px;\n$space-large-phone: 30px;\n$space-huge-phone: 60px;\n\n/******************************\n *\n *  Breakpoints\n *\n ******************************/\n\n// iPhones, Galaxy, HTC, Smartphones\n@mixin bp-phone() {\n    @media only screen and (min-width: 0px) and (max-width: 667px) {\n        @content;\n    }\n}\n\n// iPhones, Galaxy, HTC, Smartphones\n@mixin bp-over-phone() {\n    @media only screen and (min-width: 668px) {\n        @content;\n    }\n}\n\n// iPads, Tablets\n@mixin bp-tablet() {\n    @media only screen and (min-width: 668px) and (max-width: 1024px) {\n        @content;\n    }\n}\n\n// Phones AND tablets\n@mixin bp-mobile() {\n    @media only screen and (max-width: 1024px) {\n        @content;\n    }\n}\n\n// All screens, bigger than tablets\n@mixin bp-desktop() {\n    @media only screen and (min-width: 1025px) {\n        @content;\n    }\n}\n\n// Only big desktop screens\n@mixin bp-desktop-large() {\n    @media only screen and (min-width: 1920px) {\n        @content;\n    }\n}\n\n/******************************\n*\n*  Grid Setup\n*\n******************************/\n\n\n/******************************\n *\n *\tTypo\n *\n ******************************/\n\n$f-title: Helvetica, Arial, sans-serif;\n$f-text: Helvetica, Arial, sans-serif;\n\n$f-size-title-1: 28px;\n$f-size-body-1: 14px;\n\n/******************************\n *\n *\tColors\n *\n ******************************/\n\n$c-text: #000;\n\n","/**\n * from https://css-tricks.com/snippets/sass/maintain-aspect-ratio-mixin/\n */\n\n@mixin aspect-ratio($width, $height) {\n    position: relative;\n    &:before {\n        display: block;\n        content: \"\";\n        width: 100%;\n        padding-top: ($height / $width) * 100%;\n    }\n    > .content {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        height: 100%;\n    }\n}\n\n// Clearfix\n//\n// For modern browsers\n// 1. The space content is one way to avoid an Opera bug when the\n//    contenteditable attribute is included anywhere else in the document.\n//    Otherwise it causes space to appear at the top and bottom of elements\n//    that are clearfixed.\n// 2. The use of `table` rather than `block` is only necessary if using\n//    `:before` to contain the top-margins of child elements.\n//\n// Source: http://nicolasgallagher.com/micro-clearfix-hack/\n\n@mixin clearfix() {\n    &:before,\n    &:after {\n        content: \" \"; // 1\n        display: table; // 2\n    }\n    &:after {\n        clear: both;\n    }\n}\n\n.clearfix {\n    @include clearfix();\n}\n","// Define every font setting here and include mixin where needed. This way we can combine font families, sizes and weights\n// in one single setting.\n\n@mixin font-title-1() {\n    font-family: $f-title;\n    font-size: $f-size-title-1;\n    font-weight: bold;\n}\n\n@mixin font-body-1() {\n    font-family: $f-body;\n    font-size: $f-size-body-1;\n}\n\na, a:visited {\n    color: $c-text;\n    text-decoration: none;\n}\n\nh1, h2, h3, h4, h5, h6 {\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    @include font-title-1();\n    @extend .space-bottom;\n}\n\nh2 {\n    @include font-title-1();\n    @extend .space-bottom--small;\n}\n\nh3 {\n    @include font-title-1();\n    @extend .space-bottom--small;\n}\n\nh4 {\n    @include font-title-1();\n}\n\nh5 {\n    @include font-title-1();\n}\n\nh6 {\n    @include font-title-1();\n}\n\n\n\n\n\n",".fl-left { float: left; }\n.fl-right { float: right; }\n\n.ta-l { text-align: left; }\n.ta-c { text-align: center; }\n.ta-r { text-align: right; }\n\n.display-inline-block { display: inline-block; }\n\n.hidden {\n    display: none;\n}\n\n.hidden-phone {\n    @include bp-phone {\n        display: none;\n    }\n}\n\n.visible-only-phone {\n    @include bp-over-phone {\n        display: none;\n    }\n}\n\n.hidden-desktop {\n    @include bp-desktop {\n        display: none;\n    }\n}\n\n\n// If you need responsive spacing (e.g. 40px on desktop and 20px on mobile) use the\n// adaptive spacing mixins (see _layout.scss)\n//\n// Example:\n//\n// .box {\n//     @extend .space-top--small();\n//     @extend .space-bottom--huge();\n//     --> creates margins: [responsive-size]\n// }\n//\n// .box {\n//     @extend .space-inner-top--large();\n//     --> creates paddings: [responsive-size]\n// }\n//\n// This will use $space-small, $space-small-phone etc. according to the breakpoints. Adjust the basic spaces below.\n//\n// Examples:\n// @extend .space-all();                    --> normal margin all sides\n// @extend .space-all--huge();              --> huge margin all sides\n// @extend .space-top();                    --> normal margin top\n// @extend .space-inner-top--small();       --> small padding on top\n// @extend .space-inner-left--huge();       --> huge padding left\n//\n//\n@mixin generate-space($spaceDir, $spaceType) {\n    .space-#{$spaceDir} {\n\n        #{$spaceType}: $space;\n        @include bp-phone() { #{$spaceType}: $space-phone; }\n\n        &--small {\n            #{$spaceType}: $space-small;\n            @include bp-phone() { #{$spaceType}: $space-small-phone; }\n            @include bp-tablet() { #{$spaceType}: $space-small-tablet; }\n        }\n        &--large {\n            #{$spaceType}: $space-large;\n            @include bp-phone() { #{$spaceType}: $space-large-phone; }\n            @include bp-tablet() { #{$spaceType}: $space-large-tablet; }\n        }\n        &--huge {\n            #{$spaceType}: $space-huge;\n            @include bp-phone() { #{$spaceType}: $space-huge-phone; }\n            @include bp-tablet() { #{$spaceType}: $space-huge-tablet; }\n        }\n    }\n}\n\n// If you don't need all kind of spacings, you can disable them here individually\n@mixin generate-all-spaces() {\n    @include generate-space('all', 'margin');\n    @include generate-space('top', 'margin-top');\n    @include generate-space('right', 'margin-right');\n    @include generate-space('bottom', 'margin-bottom');\n    @include generate-space('left', 'margin-left');\n\n    @include generate-space('inner-all', 'padding');\n    @include generate-space('inner-top', 'padding-top');\n    @include generate-space('inner-right', 'padding-right');\n    @include generate-space('inner-bottom', 'padding-bottom');\n    @include generate-space('inner-left', 'padding-left');\n}\n\n@include generate-all-spaces();\n","* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nhtml, body {\n    //height: 100%;\n}\n\nbody {\n    font-family: $f-text;\n    -webkit-font-smoothing: antialiased;\n    overflow-x: hidden;\n}\n"],"sourceRoot":"/source/"}